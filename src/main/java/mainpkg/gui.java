package mainpkg;

import java.awt.Dimension;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreePath;
import objects.database;
import objects.host;
import objects.table;
import objects.view;

/**
 *
 * @author Fernando
 */
public class gui extends javax.swing.JFrame {

    private host selHost;
    private List<database> selDBs;
    
    static hostMgr hMgr = new hostMgr();
    static List<host> hosts = new ArrayList<>();
    
    /**
     * Creates new form gui
     */
    public gui() {
        initComponents();
        
        ini();
    }
    
    /**
     * Checks if hosts folder exists, if not, it will create it. Also updates the jTree
     */
    public static void ini(){
        hMgr.hostsFolder = main.hostsFolder;
        if(hMgr.dirExists()){
            hosts = hMgr.readHosts();
        } else{
            hMgr.createDir();
        }
        
        treeFill();
        jTree1.expandRow(0);
        
    }
    
    /**
     * Fills the tree with the hosts
     */
    public static void treeFill(){
        DefaultMutableTreeNode top = new DefaultMutableTreeNode("Hosts");
        DefaultTreeModel model = new DefaultTreeModel(top);
        jTree1.setModel(model);
        
        for (int i = 0; i < hosts.size(); i++) {
            DefaultMutableTreeNode hst = new DefaultMutableTreeNode();
            hst.setUserObject(hosts.get(i).getName());
            top.add(hst);
        }
    }
    
    /**
     * Returns a DefaultTableModel to build a table
     * @param rs The ResulSet of a table
     * @return The DefaultTableModel
     * @throws SQLException 
     */
    public DefaultTableModel buildTableModel(ResultSet rs) throws SQLException {
        ResultSetMetaData metaData = rs.getMetaData();

        // names of columns
        Vector<String> columnNames = new Vector<String>();
        int columnCount = metaData.getColumnCount();
        for (int column = 1; column <= columnCount; column++) {
            columnNames.add(metaData.getColumnName(column));
        }

        // data of the table
        Vector<Vector<Object>> data = new Vector<Vector<Object>>();
        while (rs.next()) {
            Vector<Object> vector = new Vector<Object>();
            for (int columnIndex = 1; columnIndex <= columnCount; columnIndex++) {
                vector.add(rs.getObject(columnIndex));
            }
            data.add(vector);
        }

        return new DefaultTableModel(data, columnNames);
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jSplitPane2 = new javax.swing.JSplitPane();
        jScrollPaneTree = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jSplitPane3 = new javax.swing.JSplitPane();
        jTabbedPaneDatabases = new javax.swing.JTabbedPane();
        jScrollPaneDatabases = new javax.swing.JScrollPane();
        jListDatabases = new javax.swing.JList<>();
        jTabbedPaneTablesViews = new javax.swing.JTabbedPane();
        jScrollPaneTables = new javax.swing.JScrollPane();
        jListTables = new javax.swing.JList<>();
        jScrollPaneViews = new javax.swing.JScrollPane();
        jListViews = new javax.swing.JList<>();
        jTabbedPane1 = new ClosableTabbedPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenu5 = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SQLNav");

        jSplitPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jSplitPane1.setDividerLocation(250);
        jSplitPane1.setDividerSize(5);
        jSplitPane1.setForeground(new java.awt.Color(255, 255, 255));

        jSplitPane2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jSplitPane2.setDividerLocation(150);
        jSplitPane2.setDividerSize(5);
        jSplitPane2.setForeground(java.awt.Color.white);
        jSplitPane2.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        jTree1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTree1MouseClicked(evt);
            }
        });
        jScrollPaneTree.setViewportView(jTree1);

        jSplitPane2.setTopComponent(jScrollPaneTree);

        jSplitPane3.setBorder(null);
        jSplitPane3.setDividerLocation(100);
        jSplitPane3.setDividerSize(5);
        jSplitPane3.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        jListDatabases.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListDatabasesMouseClicked(evt);
            }
        });
        jScrollPaneDatabases.setViewportView(jListDatabases);

        jTabbedPaneDatabases.addTab("Databases", jScrollPaneDatabases);

        jSplitPane3.setTopComponent(jTabbedPaneDatabases);

        jTabbedPaneTablesViews.setName(""); // NOI18N

        jListTables.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListTablesMouseClicked(evt);
            }
        });
        jScrollPaneTables.setViewportView(jListTables);

        jTabbedPaneTablesViews.addTab("Tables", jScrollPaneTables);

        jListViews.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListViewsMouseClicked(evt);
            }
        });
        jScrollPaneViews.setViewportView(jListViews);

        jTabbedPaneTablesViews.addTab("Views", jScrollPaneViews);

        jSplitPane3.setRightComponent(jTabbedPaneTablesViews);

        jSplitPane2.setBottomComponent(jSplitPane3);

        jSplitPane1.setLeftComponent(jSplitPane2);
        jSplitPane2.getAccessibleContext().setAccessibleParent(jSplitPane1);

        jSplitPane1.setRightComponent(jTabbedPane1);

        jMenu1.setText("File");

        jMenuItem1.setText("New host");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        jMenu3.setText("View");
        jMenuBar1.add(jMenu3);

        jMenu4.setText("Tools");
        jMenuBar1.add(jMenu4);

        jMenu5.setText("Window");
        jMenuBar1.add(jMenu5);

        jMenu6.setText("Help");
        jMenuBar1.add(jMenu6);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1002, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 462, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTree1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTree1MouseClicked
        TreePath tp = null;
        try{
            tp = jTree1.getSelectionPath().getParentPath();
        }catch(Exception ex){
            //tp equals null
        }
        if(tp != null){
            int[] sel = jTree1.getSelectionModel().getSelectionRows();
            host selH = hosts.get(sel[0]-1);
            
            selDBs = new queries().getDBs(selH);
            DefaultListModel<String> dlm = new DefaultListModel<>();
            
            for (int i = 0; i < selDBs.size(); i++) {
                String dbName = selDBs.get(i).getName();
                dlm.addElement(dbName);
            }
            selHost = selH;
            jListDatabases.setModel(dlm);
        }
    }//GEN-LAST:event_jTree1MouseClicked

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        newHost nHost = new newHost();
        nHost.setLocationRelativeTo(super.rootPane);
        nHost.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jListDatabasesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListDatabasesMouseClicked
        String s = jListDatabases.getSelectedValue();
        if(s != null){
            database db = new database(s);
            List<table> tables = new queries().getTables(selHost, db);
            List<view> views = new queries().getViews(selHost, db);

            DefaultListModel<String> dlm = new DefaultListModel<>();
            for (int i = 0; i < tables.size(); i++) {
                String tableName = tables.get(i).getName();
                dlm.addElement(tableName);
            }
            jListTables.setModel(dlm);

            DefaultListModel<String> dlm2 = new DefaultListModel<>();
            for (int i = 0; i < views.size(); i++) {
                String viewName = views.get(i).getName();
                dlm2.addElement(viewName);
            }
            jListViews.setModel(dlm2);
        }
    }//GEN-LAST:event_jListDatabasesMouseClicked
    
    private void jListTablesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListTablesMouseClicked
        String s = jListDatabases.getSelectedValue();
        String str = jListTables.getSelectedValue();
        if(s != null){
            database db = new database(s);
            table t = new table(str);
            ResultSet rs = new queries().getTable(selHost, db, t);
            try {
                JTable jt = new JTable();
                jt.getTableHeader().setReorderingAllowed(false);
                
                jt.setModel(buildTableModel(rs));
                jt.setEnabled(false);
                JScrollPane jsp = new JScrollPane(jt);
                jTabbedPane1.addTab(str ,jsp);
                
                jTabbedPane1.setSelectedIndex(jTabbedPane1.getTabCount()-1);
            } catch (SQLException ex) {
                Logger.getLogger(gui.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jListTablesMouseClicked

    private void jListViewsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListViewsMouseClicked
        String s = jListDatabases.getSelectedValue();
        String str = jListViews.getSelectedValue();
        if(s != null){
            database db = new database(s);
            table t = new table(str);
            ResultSet rs = new queries().getTable(selHost, db, t);
            try {
                JTable jt = new JTable();
                jt.getTableHeader().setReorderingAllowed(false);
                
                jt.setModel(buildTableModel(rs));
                JScrollPane jsp = new JScrollPane(jt);
                jTabbedPane1.addTab(str ,jsp);
                
                jTabbedPane1.setSelectedIndex(jTabbedPane1.getTabCount()-1);
            } catch (SQLException ex) {
                Logger.getLogger(gui.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jListViewsMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new gui().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> jListDatabases;
    private javax.swing.JList<String> jListTables;
    private javax.swing.JList<String> jListViews;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPaneDatabases;
    private javax.swing.JScrollPane jScrollPaneTables;
    private javax.swing.JScrollPane jScrollPaneTree;
    private javax.swing.JScrollPane jScrollPaneViews;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JSplitPane jSplitPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPaneDatabases;
    private javax.swing.JTabbedPane jTabbedPaneTablesViews;
    public static javax.swing.JTree jTree1;
    // End of variables declaration//GEN-END:variables
}
